int solve(int n,int total,vector<int>&cost,int i,vector<vector<int>>&dp){
        if(i==n){
            return 0;
        }
        else if(total==0){
            return 0;
        }
        if(dp[i][total]!=-1){
            return dp[i][total];
        }
        if(total >= cost[i]){
            return dp[i][total] = max(solve(n,total,cost,i+1,dp),1+solve(n,total-cost[i]+floor(0.9*cost[i]),cost,i+1,dp));
        }
        else{
            return dp[i][total] = solve(n,total,cost,i+1,dp);
        }
        }
    int max_courses(int n, int total, vector<int> &cost)
    {
        //Code Here
        vector<vector<int>>dp(n+1,vector<int>(total+1,-1));
        return solve(n,total,cost,0,dp);
    }
